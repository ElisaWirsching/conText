% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/feature_sim.R
\name{feature_sim}
\alias{feature_sim}
\title{Given two feature embedding matrices, compute "parallel" cosine similarities
between overlapping features.}
\usage{
feature_sim(x, y, features = character(0))
}
\arguments{
\item{x}{a feature embedding matrix (\code{fem})}

\item{y}{a feature embedding matrix (\code{fem})}

\item{features}{(character) vector of features for which to compute
similarity scores. If not defined then all features will be used.}
}
\value{
a \code{data.frame} with following columns:
\item{\code{feature}}{(character) vector of features that are being compared}
\item{\code{value}}{(numeric) cosine similarity between features in both \code{fem}s}
}
\description{
Given two feature embedding matrices, compute "parallel" cosine similarities
between overlapping features.
}
\examples{

library(quanteda)

# tokenize texts
cr_tokens_R <- tokens(corpus_subset(cr_sample_corpus, party == "R"))
cr_tokens_D <- tokens(corpus_subset(cr_sample_corpus, party == "D"))

# create feature co-occurrence matrix (set tri = FALSE to work with fem)
cr_fcm_R <- fcm(cr_tokens_R, context = "window", window = 6,
count = "frequency", tri = FALSE)

cr_fcm_D <- fcm(cr_tokens_D, context = "window", window = 6,
count = "frequency", tri = FALSE)

# compute feature-embedding matrix
cr_fem_R <- fem(cr_fcm_R, pre_trained = cr_glove_subset,
transform = TRUE, transform_matrix = cr_transform, verbose = FALSE)

cr_fem_D <- fem(cr_fcm_D, pre_trained = cr_glove_subset,
transform = TRUE, transform_matrix = cr_transform, verbose = FALSE)

# compare features
feature_sim(x = cr_fem_R, y = cr_fem_D)

}
\keyword{feature_sim}
