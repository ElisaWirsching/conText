% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_seq_cos_sim.R
\name{get_seq_cos_sim}
\alias{get_seq_cos_sim}
\title{Calculate cosine similarities between target word and candidates words over
sequenced variable using ALC embedding approach}
\usage{
get_seq_cos_sim(
  x,
  seqvar,
  target,
  candidates,
  pre_trained,
  transform_matrix,
  window = 6,
  valuetype = "fixed",
  case_insensitive = TRUE,
  hard_cut = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{x}{a character vector - this is the set of documents (corpus) of interest}

\item{seqvar}{ordered variable such as list of dates or ordered iseology scores}

\item{target}{a character vector - target word}

\item{candidates}{(character) vector of features of interest}

\item{pre_trained}{a V x D matrix of numeric values - pretrained embeddings with V = size of vocabulary and D = embedding dimensions}

\item{transform_matrix}{a D x D transformation matrix}

\item{window}{integer - defines the size of a context (words around the target)}

\item{valuetype}{the type of pattern matching: "glob" for "glob"-style wildcard expressions;
"regex" for regular expressions; or "fixed" for exact matching.}

\item{case_insensitive}{logical - if TRUE, ignore case when matching the target.
See quanteda's documentation for the kwic function.}

\item{hard_cut}{logical - if TRUE then the text must have window x 2 tokens,
if FALSE it can have window x 2 or fewer (e.g. if a doc begins with a target word,
then text will have window tokens rather than window x 2)}

\item{verbose}{logical - if TRUE, report the total number of target instances found, and
report the observations that had no overlap the provided pre-trained embeddings}
}
\value{
a data.frame with one column for
each candidate term and one column for seqvar
}
\description{
Calculate cosine similarities between target word and candidates words over
sequenced variable using ALC embedding approach
}
\examples{

library(quanteda)

# gen sequence var (here: year)
docvars(cr_sample_corpus, 'year') <- rep(2011:2014, each = 50)
cos_simsdf <- get_seq_cos_sim(x = cr_sample_corpus,
seqvar = docvars(cr_sample_corpus, 'year'),
target = "equal",
candidates = c("immigration", "immigrants"),
pre_trained = cr_glove_subset,
transform_matrix = cr_transform)
}
