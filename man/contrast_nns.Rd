% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contrast_nns.R
\name{contrast_nns}
\alias{contrast_nns}
\title{Contrast nearest neighbors}
\usage{
contrast_nns(
  context1 = NULL,
  context2 = NULL,
  pre_trained = NULL,
  transform_matrix = NULL,
  transform = TRUE,
  bootstrap = TRUE,
  num_bootstraps = 20,
  permute = TRUE,
  num_permutations = 100,
  candidates = NULL,
  norm = "l2"
)
}
\arguments{
\item{context1}{context vector for group 1 - `context`` variable in get_context output}

\item{context2}{context vector for group 2 - `context`` variable in get_context output}

\item{pre_trained}{a V x D matrix of numeric values - pretrained embeddings with V = size of vocabulary and D = embedding dimensions}

\item{transform_matrix}{a D x D transformation matrix}

\item{transform}{logical - if TRUE (default) apply the a la carte transformation, if FALSE ouput untransformed averaged embedding}

\item{bootstrap}{logical - if TRUE, bootstrap cosine similarity - required to get standard errors cosine similarity of nearest neighbors}

\item{num_bootstraps}{numeric - number of bootstraps to use}

\item{permute}{logical - if TRUE, compute empirical p-values using permutation test}

\item{num_permutations}{numeric - number of permutations to use}

\item{candidates}{character vector defining the candidates for nearest neighbors - e.g. output from \code{get_local_vocab}}

\item{norm}{character = c("l2", "none") - set to 'l2' for cosine similarity and to 'none' for inner product (see ?sim2 in text2vec)}
}
\value{
a list with three elements, nns for group 1, nns for group 2 and nns_ratio comparing with ratios of similarities between the two groups
}
\description{
Contrast nearest neighbors
}
\examples{
library(conText)
library(dplyr)

# load data
corpus <- sample_corpus
pre_trained <- sample_glove
transform_matrix <- khodakA

# find contexts for Republican speakers
contextR <- get_context(x = corpus$speech[corpus$party == 'R'], target = 'immigration',
                        window = 6, valuetype = "fixed", case_insensitive = TRUE,
                        hard_cut = FALSE, verbose = FALSE)

# find contexts for Democrat speakers
contextD <- get_context(x = corpus$speech[corpus$party == 'D'], target = 'immigration',
                        window = 6, valuetype = "fixed", case_insensitive = TRUE,
                        hard_cut = FALSE, verbose = FALSE)

# find local vocab (use it to define the candidate of nearest neighbors)
local_vocab <- get_local_vocab(c(contextR$context, contextD$context), pre_trained)

set.seed(42L)
contrast_target <- contrast_nns(context1 = contextR$context, context2 = contextD$context,
                               pre_trained, transform_matrix, transform = TRUE,
                               bootstrap = TRUE, num_bootstraps = 20,
                               permute = TRUE, num_permutations = 100,
                               candidates = local_vocab, norm = "l2")

knitr::kable(head(contrast_target$nns1))
knitr::kable(head(contrast_target$nns2))
knitr::kable(head(contrast_target$nns_ratio))
}
