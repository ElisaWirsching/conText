% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_nns.R
\name{find_nns}
\alias{find_nns}
\title{Return nearest neighbors based on cosine similarity}
\usage{
find_nns(target_embedding, pre_trained, N = 5, candidates = NULL, norm = "l2")
}
\arguments{
\item{target_embedding}{matrix of numeric values}

\item{pre_trained}{matrix of numeric values - pretrained embeddings}

\item{N}{number of nearest neighbors to return}

\item{candidates}{character vector defining vocabulary to subset conmparison to}

\item{norm}{character = c("l2", "none") - how to scale input matrices. If they are already scaled - use "none" (see ?sim2)}
}
\value{
a character vector of nearest neighbors to target
}
\description{
Return nearest neighbors based on cosine similarity
}
\examples{
library(conText)
library(dplyr)

# load data
corpus <- sample_corpus
pre_trained <- sample_glove
transform_matrix <- khodakA

# find contexts for term immigration
context_immigration <- get_context(x = corpus$speech, target = 'immigration',
                                   window = 6, valuetype = "fixed", case_insensitive = TRUE,
                                   hard_cut = FALSE, verbose = FALSE)

# compute alc embedding
contexts_vectors <- embed_target(context = context_immigration$context, pre_trained,
                                 transform_matrix, transform = TRUE,
                                 aggregate = TRUE, verbose = FALSE)

# find local vocab
local_vocab <- get_local_vocab(context_immigration$context, pre_trained)

find_nns(target_embedding = contexts_vectors$target_embedding,
         pre_trained, N = 5, candidates = local_vocab, norm = "l2")
}
