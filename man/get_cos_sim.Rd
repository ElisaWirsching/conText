% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_cos_sim.R
\name{get_cos_sim}
\alias{get_cos_sim}
\title{Given a coprus and a set of features, calculate cosine similarities over
a grouping variable.}
\usage{
get_cos_sim(
  x,
  groups = NULL,
  features = character(0),
  pre_trained,
  transform = TRUE,
  transform_matrix,
  bootstrap = TRUE,
  num_bootstraps = 10,
  what = "word",
  as_list = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{x}{a character vector - this is the set of documents (corpus) of interest}

\item{groups}{a grouping variable}

\item{features}{(character) features of interest}

\item{pre_trained}{a F x D matrix of numeric values corresponding to pretrained embeddings
F = number of features and D = embedding dimensions.
rownames(pre_trained) = set of features for which there is a pre-trained embedding}

\item{transform}{(logical) if TRUE (default) apply the \verb{a la carte} transformation,
if FALSE ouput untransformed averaged embedding}

\item{transform_matrix}{a D x D matrix of numeric values corresponding
to the `a la carte`` transformation matrix}

\item{bootstrap}{(logical) if TRUE, bootstrap nns - sample from corpus with replacement;
if groups defined, sampling is automatically stratified; top nns are those with
the highest average over all bootstrap samples.}

\item{num_bootstraps}{(integer) number of bootstraps to use}

\item{what}{character; which quanteda tokenizer to use. You will rarely want to change this.
For Chinese texts you may want to set what = 'fastestword'.}

\item{as_list}{(logical) if FALSE all results are combined into a single data.frame
If TRUE, a list of data.frames is returned with one data.frame per feature.}

\item{verbose}{logical - report the documents/features that had
no overlap with the provided pre-trained embeddings}
}
\value{
a \code{data.frame} or list of data.frames (one for each target)
with the following columns:
\item{\code{target}}{ (character) vector with the rownames of the dfm,
either defining the groups or the target terms}.
\item{\code{feature}}{(character) vector of feature terms, one
instance for each target.}
\item{\code{value}}{(numeric) cosine similarity between target
and feature.}
}
\description{
Given a coprus and a set of features, calculate cosine similarities over
a grouping variable.
}
\examples{

library(quanteda)

immig_corpus <- corpus_context(x = cr_sample_corpus,
pattern = "immigration", window = 6L, verbose = TRUE)

temp1 <- get_cos_sim(x = immig_corpus,
groups = docvars(immig_corpus, 'party'),
features = c("reform", "enforce"),
pre_trained = glove_subset,
transform = TRUE,
transform_matrix = khodakA,
bootstrap = TRUE,
num_bootstraps = 10,
as_list = FALSE,
verbose = FALSE)
}
\keyword{get_cos_sim}
